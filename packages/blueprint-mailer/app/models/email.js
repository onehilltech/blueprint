const mongodb = require ('@onehilltech/blueprint-mongodb');
const { Schema } = mongodb;
const { Types: { refersTo }} = Schema;

// use mongodb.Types to access mongoose.Types

const options = {
  // Name of the model collection.
  collection: 'mailer_emails',
};

const schema = new Schema ({
  /// The message id for the email. This is not the same as the _id for the email
  /// model. The message id is generated by the target email transport.
  message_id: { type: String, unique: true, sparse: true },

  /// Type of the email. This is good for grouping similar emails that may have
  /// different subjects.
  type: { type: String, index: true },

  /// Date of the email. The default date is now.
  date: { type: Date, required: true, default: Date.now },

  /// Sender of the email.
  from: { type: String },

  /// List of recipients that appear in the to: field.
  to: { type: String },

  /// List of recipients that appear in the cc: field.
  cc: { type: String },

  /// List of recipients that appear in the bcc: field.
  bcc: { type: String },

  /// Subject of the email.
  subject: { type: String },

  /// The error message associated with the email.
  error_message: { type: String }
}, options);

module.exports = mongodb.resource ('email', schema);
